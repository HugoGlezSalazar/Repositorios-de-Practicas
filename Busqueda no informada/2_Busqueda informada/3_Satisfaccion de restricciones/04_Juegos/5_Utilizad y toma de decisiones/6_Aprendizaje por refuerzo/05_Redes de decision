import networkx as nx

# Crear un gráfico de red de decisión
G = nx.DiGraph()

# Agregar nodos (eventos y decisiones)
G.add_node("Iniciar", type="decision")
G.add_node("Llueve", type="event")
G.add_node("Tráfico", type="event")
G.add_node("Llegar tarde", type="event")
G.add_node("Tomar sombrilla", type="decision")

# Agregar bordes entre los nodos
G.add_edge("Iniciar", "Llueve")
G.add_edge("Iniciar", "Tráfico")
G.add_edge("Llueve", "Tomar sombrilla")
G.add_edge("Tráfico", "Llegar tarde")
G.add_edge("Llegar tarde", "Tomar sombrilla")

# Asignar probabilidades a los eventos
G.nodes["Llueve"]["prob"] = 0.3
G.nodes["Tráfico"]["prob"] = 0.4
G.nodes["Llegar tarde"]["prob"] = 0.2

# Asignar valores a las decisiones
G.nodes["Iniciar"]["value"] = 0
G.nodes["Tomar sombrilla"]["value"] = 5

